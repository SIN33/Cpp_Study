#include "pch.h"


#include <gtest/gtest.h>
#include <vector>
#include <cassert>
#include <algorithm>
#include <chrono>

template <typename It, typename Value>
auto find_slow(It first, It last, const Value& value) {
  for(auto it = first; it != last; ++it)
    if(*it == value)
      return it;
  return last;
}

template <typename It, typename Value>
auto find_fast(It first, It last, const Value& value) 
{
  // Main loop unrolled into chunks of four
  auto num_trips = (last - first) / 4;
  for (auto trip_count = num_trips; trip_count > 0; --trip_count) {
    if (*first == value) {return first;} ++first;
    if (*first == value) {return first;} ++first;
    if (*first == value) {return first;} ++first;
    if (*first == value) {return first;} ++first;
  }
  // Handle the remaining elements
  switch (last - first) 
  {
    case 3: if (*first == value) {return first;} ++first;
    case 2: if (*first == value) {return first;} ++first;
    case 1: if (*first == value) {return first;} ++first;
    case 0:
    default: return last;
  }
}

inline void getElapsedTime(std::chrono::steady_clock::time_point begin)
{

  auto end = std::chrono::high_resolution_clock::now();
  auto elapsed = std::chrono::duration_cast<std::chrono::nanoseconds>(end - begin);
printf("Time measured: %.3f seconds.\n", elapsed.count() * 1e-3);

}

TEST(FindAlgorithm, SlowAndFast) {
  auto vals = std::vector<int>{1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7
      ,6,8,7,9,0,1,3,2,4,3,5,4,6,5,7,6,8,7,9,0,};

  auto begin = std::chrono::high_resolution_clock::now();
  auto a = find_slow(vals.begin(), vals.end(), 7);
  ASSERT_TRUE(a != vals.end());
  getElapsedTime(begin);


  auto begin2 = std::chrono::high_resolution_clock::now();
  auto b = find_fast(vals.begin(), vals.end(), 7);
  getElapsedTime(begin2);
  ASSERT_TRUE(b != vals.end());
}